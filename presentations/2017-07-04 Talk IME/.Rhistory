list_plots_transplant_identite$plot_R2
make_plot_results = function(data_results){
#Concordance
stat_concordance = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_concordance))
stat_concordance$model = gsub(" NA","",paste(stat_concordance$algo, stat_concordance$type_weights))
plot_concordance = ggplot(data = data.frame(stat_concordance), aes(x = model, y = mean_concordance, group = 1)) +
geom_line() +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10)) +
ylab("Concordance") +
coord_fixed(ratio = 70)
#R2
stat_KM_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_KM_R2))
stat_KM_R2$model = gsub(" NA","",paste(stat_KM_R2$algo, stat_KM_R2$type_weights))
stat_KM_R2$mean_R2 = stat_KM_R2$mean_KM_R2
stat_KM_R2$Weights = "KM"
stat_Cox_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_Cox_R2))
stat_Cox_R2$model = gsub(" NA","",paste(stat_Cox_R2$algo, stat_Cox_R2$type_weights))
stat_Cox_R2$mean_R2 = stat_Cox_R2$mean_Cox_R2
stat_Cox_R2$Weights = "Cox"
stat_RSF_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_RSF_R2))
stat_RSF_R2$model = gsub(" NA","",paste(stat_RSF_R2$algo, stat_RSF_R2$type_weights))
stat_RSF_R2$mean_R2 = stat_RSF_R2$mean_RSF_R2
stat_RSF_R2$Weights = "RSF"
plot_R2 = ggplot( data = rbind(stat_KM_R2[,c("model","mean_R2","Weights")],
stat_Cox_R2[,c("model","mean_R2","Weights")],
stat_RSF_R2[,c("model","mean_R2","Weights")]) ,
aes(x = model, y = mean_R2, group = Weights, colour = Weights)) +
geom_line() +
ylab("R2") +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, size = 10, vjust = 0.6),
axis.title.x = element_blank()) +
coord_fixed(ratio = 35)
return(list(plot_concordance = plot_concordance, plot_R2 = plot_R2))
}
list_plots_transplant_identite = make_plot_results(data_results = res_transplant_identite_summary)
list_plots_transplant_identite$plot_R2
ggplot( data = rbind(stat_KM_R2[,c("model","mean_R2","Weights")],
stat_Cox_R2[,c("model","mean_R2","Weights")],
stat_RSF_R2[,c("model","mean_R2","Weights")]) ,
aes(x = model, y = mean_R2, group = Weights, colour = Weights)) +
geom_line() +
ylab("R2") +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, size = 10, vjust = 0.6),
axis.title.x = element_blank()) +
coord_fixed(ratio = 35)
list_plots_transplant_identite = make_plot_results(data_results = res_transplant_identite_summary)
list_plots_transplant_identite$plot_R2
list_plots_transplant_identite$plot_concordance
make_plot_results = function(data_results){
#Concordance
stat_concordance = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_concordance))
stat_concordance$model = gsub(" NA","",paste(stat_concordance$algo, stat_concordance$type_weights))
plot_concordance = ggplot(data = data.frame(stat_concordance), aes(x = model, y = mean_concordance, group = 1)) +
geom_line() +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10)) +
ylab("Concordance") +
coord_fixed(ratio = 70)
#R2
stat_KM_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_KM_R2))
stat_KM_R2$model = gsub(" NA","",paste(stat_KM_R2$algo, stat_KM_R2$type_weights))
stat_KM_R2$mean_R2 = stat_KM_R2$mean_KM_R2
stat_KM_R2$Weights = "KM"
stat_Cox_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_Cox_R2))
stat_Cox_R2$model = gsub(" NA","",paste(stat_Cox_R2$algo, stat_Cox_R2$type_weights))
stat_Cox_R2$mean_R2 = stat_Cox_R2$mean_Cox_R2
stat_Cox_R2$Weights = "Cox"
stat_RSF_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_RSF_R2))
stat_RSF_R2$model = gsub(" NA","",paste(stat_RSF_R2$algo, stat_RSF_R2$type_weights))
stat_RSF_R2$mean_R2 = stat_RSF_R2$mean_RSF_R2
stat_RSF_R2$Weights = "RSF"
plot_R2 = ggplot( data = rbind(stat_KM_R2[,c("model","mean_R2","Weights")],
stat_Cox_R2[,c("model","mean_R2","Weights")],
stat_RSF_R2[,c("model","mean_R2","Weights")]) ,
aes(x = model, y = mean_R2, group = Weights, colour = Weights)) +
geom_line() +
ylab("R2") +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, size = 10, vjust = 0.6),
axis.title.x = element_blank()) +
coord_fixed(ratio = 35)
return(list(plot_concordance = plot_concordance, plot_R2 = plot_R2))
}
list_plots_transplant_identite = make_plot_results(data_results = res_transplant_identite_summary)
list_plots_transplant_identite$plot_R2
data_results = res_transplant_identite_summary
stat_concordance = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_concordance))
stat_concordance$model = gsub(" NA","",paste(stat_concordance$algo, stat_concordance$type_weights))
plot_concordance = ggplot(data = data.frame(stat_concordance), aes(x = model, y = mean_concordance, group = 1)) +
geom_line() +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10)) +
ylab("Concordance") +
coord_fixed(ratio = 70)
plot_concordance
stat_KM_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_KM_R2))
stat_KM_R2$model = gsub(" NA","",paste(stat_KM_R2$algo, stat_KM_R2$type_weights))
stat_KM_R2$mean_R2 = stat_KM_R2$mean_KM_R2
stat_KM_R2$Weights = "KM"
stat_Cox_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_Cox_R2))
stat_Cox_R2$model = gsub(" NA","",paste(stat_Cox_R2$algo, stat_Cox_R2$type_weights))
stat_Cox_R2$mean_R2 = stat_Cox_R2$mean_Cox_R2
stat_Cox_R2$Weights = "Cox"
stat_RSF_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_RSF_R2))
stat_RSF_R2$model = gsub(" NA","",paste(stat_RSF_R2$algo, stat_RSF_R2$type_weights))
stat_RSF_R2$mean_R2 = stat_RSF_R2$mean_RSF_R2
stat_RSF_R2$Weights = "RSF"
plot_R2 = ggplot( data = rbind(stat_KM_R2[,c("model","mean_R2","Weights")],
stat_Cox_R2[,c("model","mean_R2","Weights")],
stat_RSF_R2[,c("model","mean_R2","Weights")]) ,
aes(x = model, y = mean_R2, group = Weights, colour = Weights)) +
geom_line() +
ylab("R2") +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, size = 10, vjust = 0.6),
axis.title.x = element_blank()) +
coord_fixed(ratio = 35)
plot_R2
ggplot( data = rbind(stat_KM_R2[,c("model","mean_R2","Weights")],
stat_Cox_R2[,c("model","mean_R2","Weights")],
stat_RSF_R2[,c("model","mean_R2","Weights")]) ,
aes(x = model, y = mean_R2, group = Weights, colour = Weights)) +
geom_line() +
ylab("R2") +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, size = 10, vjust = 0.6),
axis.title.x = element_blank()) +
coord_fixed(ratio = 20)
make_plot_results = function(data_results){
#Concordance
stat_concordance = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_concordance))
stat_concordance$model = gsub(" NA","",paste(stat_concordance$algo, stat_concordance$type_weights))
plot_concordance = ggplot(data = data.frame(stat_concordance), aes(x = model, y = mean_concordance, group = 1)) +
geom_line() +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10)) +
ylab("Concordance") +
coord_fixed(ratio = 70)
#R2
stat_KM_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_KM_R2))
stat_KM_R2$model = gsub(" NA","",paste(stat_KM_R2$algo, stat_KM_R2$type_weights))
stat_KM_R2$mean_R2 = stat_KM_R2$mean_KM_R2
stat_KM_R2$Weights = "KM"
stat_Cox_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_Cox_R2))
stat_Cox_R2$model = gsub(" NA","",paste(stat_Cox_R2$algo, stat_Cox_R2$type_weights))
stat_Cox_R2$mean_R2 = stat_Cox_R2$mean_Cox_R2
stat_Cox_R2$Weights = "Cox"
stat_RSF_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_RSF_R2))
stat_RSF_R2$model = gsub(" NA","",paste(stat_RSF_R2$algo, stat_RSF_R2$type_weights))
stat_RSF_R2$mean_R2 = stat_RSF_R2$mean_RSF_R2
stat_RSF_R2$Weights = "RSF"
plot_R2 = ggplot( data = rbind(stat_KM_R2[,c("model","mean_R2","Weights")],
stat_Cox_R2[,c("model","mean_R2","Weights")],
stat_RSF_R2[,c("model","mean_R2","Weights")]) ,
aes(x = model, y = mean_R2, group = Weights, colour = Weights)) +
geom_line() +
ylab("R2") +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, size = 10, vjust = 0.6),
axis.title.x = element_blank()) +
coord_fixed(ratio = 20)
return(list(plot_concordance = plot_concordance, plot_R2 = plot_R2))
}
list_plots_transplant_identite = make_plot_results(data_results = res_transplant_identite_summary)
list_plots_transplant_identite$plot_R2
list_plots_transplant_identite$plot_concordance
list_plots_santiane_fct_cash_flow = make_plot_results(data_results = res_santiane_fct_cash_flow_2000obs_summary)
list_plots_santiane_fct_cash_flow$plot_concordance
list_plots_santiane_fct_cash_flow$plot_R2
make_plot_results = function(data_results, plot_R2_ratio, plot_Concordance_ratio = 70){
#Concordance
stat_concordance = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_concordance))
stat_concordance$model = gsub(" NA","",paste(stat_concordance$algo, stat_concordance$type_weights))
plot_concordance = ggplot(data = data.frame(stat_concordance), aes(x = model, y = mean_concordance, group = 1)) +
geom_line() +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10)) +
ylab("Concordance") +
coord_fixed(ratio = plot_Concordance_ratio)
#R2
stat_KM_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_KM_R2))
stat_KM_R2$model = gsub(" NA","",paste(stat_KM_R2$algo, stat_KM_R2$type_weights))
stat_KM_R2$mean_R2 = stat_KM_R2$mean_KM_R2
stat_KM_R2$Weights = "KM"
stat_Cox_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_Cox_R2))
stat_Cox_R2$model = gsub(" NA","",paste(stat_Cox_R2$algo, stat_Cox_R2$type_weights))
stat_Cox_R2$mean_R2 = stat_Cox_R2$mean_Cox_R2
stat_Cox_R2$Weights = "Cox"
stat_RSF_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_RSF_R2))
stat_RSF_R2$model = gsub(" NA","",paste(stat_RSF_R2$algo, stat_RSF_R2$type_weights))
stat_RSF_R2$mean_R2 = stat_RSF_R2$mean_RSF_R2
stat_RSF_R2$Weights = "RSF"
plot_R2 = ggplot( data = rbind(stat_KM_R2[,c("model","mean_R2","Weights")],
stat_Cox_R2[,c("model","mean_R2","Weights")],
stat_RSF_R2[,c("model","mean_R2","Weights")]) ,
aes(x = model, y = mean_R2, group = Weights, colour = Weights)) +
geom_line() +
ylab("R2") +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, size = 10, vjust = 0.6),
axis.title.x = element_blank()) +
coord_fixed(ratio = plot_R2_ratio)
return(list(plot_concordance = plot_concordance, plot_R2 = plot_R2))
}
list_plots_santiane_fct_cash_flow = make_plot_results(data_results = res_santiane_fct_cash_flow_2000obs_summary,
plot_R2_ratio = 30)
list_plots_santiane_fct_cash_flow$plot_R2
list_plots_transplant_identite = make_plot_results(data_results = res_transplant_identite_summary,
plot_R2_ratio = 20)
list_plots_transplant_identite$plot_R2
list_plots_santiane_fct_cash_flow = make_plot_results(data_results = res_santiane_fct_cash_flow_2000obs_summary,
plot_R2_ratio = 30)
list_plots_santiane_fct_cash_flow$plot_concordance
list_plots_santiane_fct_cash_flow = make_plot_results(data_results = res_santiane_fct_cash_flow_2000obs_summary,
plot_R2_ratio = 30, plot_Concordance_ratio = 30)
list_plots_santiane_fct_cash_flow$plot_concordance
list_plots_santiane_fct_cash_flow = make_plot_results(data_results = res_santiane_fct_cash_flow_2000obs_summary,
plot_R2_ratio = 30,
plot_Concordance_ratio = 50)
list_plots_santiane_fct_cash_flow$plot_concordance
list_plots_santiane_fct_cash_flow = make_plot_results(data_results = res_santiane_fct_cash_flow_2000obs_summary,
plot_R2_ratio = 30,
plot_Concordance_ratio = 80)
list_plots_santiane_fct_cash_flow$plot_concordance
list_plots_santiane_fct_cash_flow$plot_R2
list_plots_transplant_identite = make_plot_results(data_results = res_transplant_identite_summary,
plot_R2_ratio = 20)
list_plots_transplant_identite$plot_concordance
list_plots_transplant_identite = make_plot_results(data_results = res_transplant_identite_summary,
plot_R2_ratio = 20,
plot_Concordance_ratio = 80)
list_plots_transplant_identite$plot_concordance
list_plots_transplant_identite$plot_R2
make_plot_results = function(data_results){
#Concordance
stat_concordance = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_concordance))
stat_concordance$model = gsub(" NA","",paste(stat_concordance$algo, stat_concordance$type_weights))
plot_concordance = ggplot(data = data.frame(stat_concordance), aes(x = model, y = mean_concordance, group = 1)) +
geom_line() +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10)) +
ylab("Concordance")
#R2
stat_KM_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_KM_R2))
stat_KM_R2$model = gsub(" NA","",paste(stat_KM_R2$algo, stat_KM_R2$type_weights))
stat_KM_R2$mean_R2 = stat_KM_R2$mean_KM_R2
stat_KM_R2$Weights = "KM"
stat_Cox_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_Cox_R2))
stat_Cox_R2$model = gsub(" NA","",paste(stat_Cox_R2$algo, stat_Cox_R2$type_weights))
stat_Cox_R2$mean_R2 = stat_Cox_R2$mean_Cox_R2
stat_Cox_R2$Weights = "Cox"
stat_RSF_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_RSF_R2))
stat_RSF_R2$model = gsub(" NA","",paste(stat_RSF_R2$algo, stat_RSF_R2$type_weights))
stat_RSF_R2$mean_R2 = stat_RSF_R2$mean_RSF_R2
stat_RSF_R2$Weights = "RSF"
plot_R2 = ggplot( data = rbind(stat_KM_R2[,c("model","mean_R2","Weights")],
stat_Cox_R2[,c("model","mean_R2","Weights")],
stat_RSF_R2[,c("model","mean_R2","Weights")]) ,
aes(x = model, y = mean_R2, group = Weights, colour = Weights)) +
geom_line() +
ylab("R2") +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, size = 10, vjust = 0.6),
axis.title.x = element_blank())
return(list(plot_concordance = plot_concordance, plot_R2 = plot_R2))
}
list_plots_santiane_fct_cash_flow = make_plot_results(data_results = res_santiane_fct_cash_flow_2000obs_summary)
list_plots_santiane_fct_cash_flow = make_plot_results(data_results = res_santiane_fct_cash_flow_2000obs_summary)
list_plots_santiane_fct_cash_flow$plot_concordance
list_plots_santiane_fct_cash_flow = make_plot_results(data_results = res_santiane_fct_cash_flow_2000obs_summary)
list_plots_santiane_fct_cash_flow$plot_concordance
list_plots_santiane_fct_cash_flow$plot_R2
list_plots_transplant_identite = make_plot_results(data_results = res_transplant_identite_summary)
list_plots_transplant_identite$plot_concordance
list_plots_transplant_identite$plot_R2
t1 = Sys.time()
res_santiane_fct_cash_flow = make_result_real_data(y_var = "y",
delta_var = "delta",
x_vars = var7,
data = base_etude[,c("y","delta",var7)],
n_train = 10000,
n_test = 10000,
max_value = 1200,
phi = calcul_facteurs_one,
phi.args = list(echeancier = echeancier,
scenario = scenario_moyen,
type = 2),
methods = c("concordance","weighted"),
types_weights_eval = c("KM","Cox","RSF"),
max_ratio_weights_eval = 1000,
v_bandwidth = c(20),
v_w_RF_type_weights = c("KM","Cox","RSF"),
v_w_RF_nodesize = c(100, 200, 400, 600, 1000),
v_w_RF_max_ratio_weights_model = c(1000),
v_w_gam_type_weights = c("KM","Cox", "RSF"),
v_w_gam_max_ratio_weights_model = c(1000),
v_RSF_reg_nodesize = c(100, 200, 400, 600, 1000),
ntree = 100,
n_repet = 30)
Sys.time() - t1
res_santiane_fct_cash_flow_summary = res_santiane_fct_cash_flow %>%
group_by(algo, type_weights, nodesize, max_ratio_weights_model) %>%
summarise(mean_concordance = round(mean(concordance.concordant),5), sd_concordance = round(sd(concordance.concordant),5),
mean_KM_R2 = round(mean(criteria_weighted.KM_R2),5), sd_KM_R2 = round(sd(criteria_weighted.KM_R2),5),
mean_Cox_R2 = round(mean(criteria_weighted.Cox_R2),5), sd_Cox_R2 = round(sd(criteria_weighted.Cox_R2),5),
mean_RSF_R2 = round(mean(criteria_weighted.RSF_R2),5), sd_RSF_R2 = round(sd(criteria_weighted.RSF_R2),5))
data.frame(res_santiane_fct_cash_flow_summary)
write.csv(res_santiane_fct_cash_flow_summary, file = "output_2017-07-01/res_santiane_fct_cash_flow_10000obs_summary.csv")
res_santiane_fct_cash_flow_10000obs_summary = read.csv("output_2017-07-01/res_santiane_fct_cash_flow_10000obs_summary.csv")
list_plots_santiane_fct_cash_flow_10000obs = make_plot_results(data_results = res_santiane_fct_cash_flow_10000obs_summary)
list_plots_santiane_fct_cash_flow_10000obs$plot_concordance
list_plots_santiane_fct_cash_flow_10000obs$plot_R2
list_plots_santiane_fct_cash_flow_10000obs$plot_concordance
list_plots_santiane_fct_cash_flow_10000obs$plot_concordance
list_plots_santiane_fct_cash_flow_10000obs$plot_R2
list_plots_santiane_fct_cash_flow_10000obs$plot_R2 + theme(axis.text.x = element_text(size = 15))
list_plots_santiane_fct_cash_flow_10000obs$plot_R2 + theme(axis.text.x = element_text(size = 15),
legend.text = element_text(size = 15),
axis.title.y = element_text(size = 15))
list_plots_santiane_fct_cash_flow_10000obs$plot_R2 + theme(axis.text.x = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title =  = element_text(size = 15),
axis.title.y = element_text(size = 15))
list_plots_santiane_fct_cash_flow_10000obs$plot_R2 + theme(axis.text.x = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
axis.title.y = element_text(size = 15))
list_plots_santiane_fct_cash_flow_10000obs$plot_concordance
list_plots_santiane_fct_cash_flow_10000obs$plot_concordance + theme(axis.title.y = element_text(size = 15))
list_plots_santiane_fct_cash_flow_10000obs$plot_concordance + theme(axis.title.y = element_text(size = 15))
list_plots_santiane_fct_cash_flow_10000obs$plot_R2 + theme(axis.text.x = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
axis.title.y = element_text(size = 15))
list_plots_transplant_identite$plot_R2 + theme(axis.text.x = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
axis.title.y = element_text(size = 15))
list_plots_santiane_fct_cash_flow_10000obs$plot_concordance + theme(axis.title.y = element_text(size = 15))
list_plots_transplant_identite$plot_concordance + theme(axis.title.y = element_text(size = 15))
make_plot_results = function(data_results){
#Concordance
stat_concordance = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_concordance))
stat_concordance$model = gsub(" NA","",paste(stat_concordance$algo, stat_concordance$type_weights))
plot_concordance = ggplot(data = data.frame(stat_concordance), aes(x = model, y = mean_concordance, group = 1)) +
geom_line() +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10)) +
ylab("Concordance")
#R2
stat_KM_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_KM_R2))
stat_KM_R2$model = gsub(" NA","",paste(stat_KM_R2$algo, stat_KM_R2$type_weights))
stat_KM_R2$mean_R2 = stat_KM_R2$mean_KM_R2
stat_KM_R2$Weights = "KM"
stat_Cox_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_Cox_R2))
stat_Cox_R2$model = gsub(" NA","",paste(stat_Cox_R2$algo, stat_Cox_R2$type_weights))
stat_Cox_R2$mean_R2 = stat_Cox_R2$mean_Cox_R2
stat_Cox_R2$Weights = "Cox"
stat_RSF_R2 = data_results %>%
group_by(algo, type_weights) %>%
slice(which.max(mean_RSF_R2))
stat_RSF_R2$model = gsub(" NA","",paste(stat_RSF_R2$algo, stat_RSF_R2$type_weights))
stat_RSF_R2$mean_R2 = stat_RSF_R2$mean_RSF_R2
stat_RSF_R2$Weights = "RSF"
plot_R2 = ggplot( data = rbind(stat_KM_R2[,c("model","mean_R2","Weights")],
stat_Cox_R2[,c("model","mean_R2","Weights")],
stat_RSF_R2[,c("model","mean_R2","Weights")]) ,
aes(x = model, y = mean_R2, group = Weights, colour = Weights)) +
geom_line() +
ylab("R2") +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45, size = 10, vjust = 0.6),
axis.title.x = element_blank())
return(list(plot_concordance = plot_concordance, plot_R2 = plot_R2))
}
library(ggplot2)
library(dplyr)
setwd("~/Google Drive/missions forsides/Santiane 2016/weighted_RF_survival/présentations/2017-07-04Talk IME")
res_santiane_fct_cash_flow_10000obs_summary = read.csv("output_2017-07-01/res_santiane_fct_cash_flow_10000obs_summary.csv")
res_transplant_identite_summary = read.csv("output_2017-06-30/res_transplant_identite_summary.csv")
res_santiane_fct_cash_flow_10000obs_summary
list_plots_santiane_fct_cash_flow_10000obs = make_plot_results(
data_results = res_santiane_fct_cash_flow_10000obs_summary[-grep("w_gam",res_santiane_fct_cash_flow_10000obs_summary$algo),])
list_plots_santiane_fct_cash_flow_10000obs$plot_concordance + theme(axis.title.y = element_text(size = 15))
list_plots_santiane_fct_cash_flow_10000obs$plot_R2 + theme(axis.text.x = element_text(size = 15),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
axis.title.y = element_text(size = 15))
list_plots_santiane_fct_cash_flow_10000obs$plot_concordance + theme(axis.title.y = element_text(size = 20))
list_plots_santiane_fct_cash_flow_10000obs = make_plot_results(
data_results = res_santiane_fct_cash_flow_10000obs_summary[-grep("w_gam",res_santiane_fct_cash_flow_10000obs_summary$algo),])
list_plots_santiane_fct_cash_flow_10000obs$plot_concordance + theme(axis.title.y = element_text(size = 20))
list_plots_santiane_fct_cash_flow_10000obs$plot_R2 + theme(axis.text.x = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20),
axis.title.y = element_text(size = 20))
list_plots_santiane_fct_cash_flow_10000obs$plot_R2 + theme(axis.text.x = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20),
axis.title.y = element_text(size = 20)) +
geom_line(size = 2)
list_plots_santiane_fct_cash_flow_10000obs$plot_R2 +
theme(axis.text.x = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20),
axis.title.y = element_text(size = 20)) +
geom_line(size = 2)
list_plots_santiane_fct_cash_flow_10000obs$plot_concordance +
theme(axis.title.y = element_text(size = 20)) +
geom_line(size = 2)
list_plots_transplant_identite$plot_concordance +
theme(axis.title.y = element_text(size = 20)) +
geom_line(size = 2)
list_plots_transplant_identite = make_plot_results(
data_results = res_transplant_identite_summary[-grep("w_gam",res_transplant_identite_summary$algo),])
list_plots_transplant_identite$plot_concordance +
theme(axis.title.y = element_text(size = 20)) +
geom_line(size = 2)
list_plots_santiane_fct_cash_flow_10000obs$plot_concordance +
theme(axis.title.y = element_text(size = 20)) +
geom_line(size = 2)
list_plots_santiane_fct_cash_flow_10000obs$plot_concordance +
theme(axis.title.y = element_text(size = 20)) +
geom_line(size = 2)
list_plots_transplant_identite = make_plot_results(
data_results = res_transplant_identite_summary[-grep("w_gam",res_transplant_identite_summary$algo),])
list_plots_transplant_identite$plot_concordance +
theme(axis.title.y = element_text(size = 20)) +
geom_line(size = 2)
list_plots_santiane_fct_cash_flow_10000obs$plot_R2 +
theme(axis.text.x = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20),
axis.title.y = element_text(size = 20)) +
geom_line(size = 2)
list_plots_transplant_identite$plot_R2 +
theme(axis.text.x = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20),
axis.title.y = element_text(size = 20)) +
geom_line(size = 2)
