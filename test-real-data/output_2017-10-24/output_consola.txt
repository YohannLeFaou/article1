

#### fct_cash_flow

t1 = Sys.time()
res_santiane_fct_cash_flow = make_result_real_data(y_var = "y", 
                                                   delta_var = "delta",
                                                   x_vars = var7,
                                                   data = base_etude[,c("y","delta",var7)],
                                                   n_train = 5000, #5000
                                                   n_test = 5000, #5000
                                                   max_value = 1465,
                                                   phi = calcul_facteurs_one,
                                                   phi.args = list(echeancier = echeancier,
                                                                   scenario = scenario_moyen,
                                                                   type = 2),
                                                   eval_methods = c("concordance", "weighted", "group"),
                                                   types_weights_eval = c("KM","Cox","RSF", "0_1"),
                                                   max_ratio_weights_eval = 1000,
                                                   v_bandwidth = c(20, 50),
                                                   
                                                   v_w_RF_mode1_type_weights = c("KM","Cox","RSF"),
                                                   v_w_RF_mode2_type_weights = c("KM","Cox"),
                                                   v_w_gam_type_weights = c("KM","Cox", "RSF"),
                                                   
                                                   v_w_RF_mode1_nodesize = c(100),
                                                   v_w_RF_mode2_nodesize = c(100),
                                                   v_RSF_reg_nodesize = c(100),
                                                   
                                                   v_w_RF_mode1_max_ratio_weights_model = c(10, 50),#, 50
                                                   v_w_RF_mode2_max_ratio_weights_model = c(10, 50),#, 50
                                                   v_w_gam_max_ratio_weights_model = c(10, 50),#, 50
                                                   
                                                   v_w_RF_mode1_maxdepth = 5,
                                                   v_w_RF_mode2_maxdepth = 5,
                                                   v_RSF_maxdepth = 5,
                                                   
                                                   ntree = 100,
                                                   n_repet = 100,#50
                                                   seed = 0)
Sys.time() - t1
#res_santiane_fct_cash_flow = read.csv(file = "output_2017-10-20/res_santiane_fct_cash_flow_5000.csv")

res_santiane_fct_cash_flow_summary = res_santiane_fct_cash_flow %>%
  group_by(type_pred, algo, type_weights, nodesize, maxdepth, max_ratio_weights_model) %>%
  summarise(mean_concordance = round(mean(concordance.concordant),5), sd_concordance = round(sd(concordance.concordant),5),
            mean_R2_20 = round(mean(criteria_group.R2_20),5), sd_R2_20 = round(sd(criteria_group.R2_20),5),
            mean_KM_R2 = round(mean(criteria_weighted.KM_R2),5), sd_KM_R2 = round(sd(criteria_weighted.KM_R2),5),
            mean_Cox_R2 = round(mean(criteria_weighted.Cox_R2),5), sd_Cox_R2 = round(sd(criteria_weighted.Cox_R2),5),
            mean_RSF_R2 = round(mean(criteria_weighted.RSF_R2),5), sd_RSF_R2 = round(sd(criteria_weighted.RSF_R2),5),
            mean_KM_mse = round(mean(criteria_weighted.KM_mse),5), sd_KM_mse = round(sd(criteria_weighted.KM_mse),5),
            mean_Cox_mse = round(mean(criteria_weighted.Cox_mse),5), sd_Cox_mse = round(sd(criteria_weighted.Cox_mse),5),
            mean_RSF_mse = round(mean(criteria_weighted.RSF_mse),5), sd_RSF_mse = round(sd(criteria_weighted.RSF_mse),5))
#data.frame(res_santiane_fct_cash_flow_summary)

write.csv(res_santiane_fct_cash_flow, 
          file = "output_2017-10-24/res_santiane_fct_cash_flow_5000.csv",
          row.names = F)

write.csv(res_santiane_fct_cash_flow_summary,
          file = "output_2017-10-24/res_santiane_fct_cash_flow_5000_summary.csv",
          row.names = F)


##### log

t1 = Sys.time()
res_santiane_log = make_result_real_data(y_var = "y", 
                                         delta_var = "delta",
                                         x_vars = var7,
                                         data = base_etude[,c("y","delta",var7)],
                                         n_train = 5000, #5000
                                         n_test = 5000, #5000
                                         max_value = 1465,
                                         phi = function(x){log(x+1)},
                                         phi.args = list(),
                                         eval_methods = c("concordance","weighted", "group"),
                                         types_weights_eval = c("KM","Cox","RSF", "0_1"),
                                         max_ratio_weights_eval = 1000,
                                         v_bandwidth = c(20, 50),
                                         
                                         v_w_RF_mode1_type_weights = c("KM","Cox","RSF"),
                                         v_w_RF_mode2_type_weights = c("KM","Cox"),
                                         v_w_gam_type_weights = c("KM","Cox", "RSF"),
                                         
                                         v_w_RF_mode1_nodesize = c(100),
                                         v_w_RF_mode2_nodesize = c(100),
                                         v_RSF_reg_nodesize = c(100),
                                         
                                         v_w_RF_mode1_max_ratio_weights_model = c(10, 50),#, 50
                                         v_w_RF_mode2_max_ratio_weights_model = c(10, 50),#, 50
                                         v_w_gam_max_ratio_weights_model = c(10, 50),#, 50
                                         
                                         v_w_RF_mode1_maxdepth = 5,
                                         v_w_RF_mode2_maxdepth = 5,
                                         v_RSF_maxdepth = 5,
                                         
                                         ntree = 100,
                                         n_repet = 100,#50
                                         seed = 0)
Sys.time() - t1

#res_santiane_log = read.csv(file = "output_2017-10-20/res_santiane_log_5000.csv")

res_santiane_log_summary = res_santiane_log %>%
  group_by(type_pred, algo, type_weights, nodesize, maxdepth, max_ratio_weights_model) %>%
  summarise(mean_concordance = round(mean(concordance.concordant),5), sd_concordance = round(sd(concordance.concordant),5),
            mean_R2_20 = round(mean(criteria_group.R2_20),5), sd_R2_20 = round(sd(criteria_group.R2_20),5),
            mean_KM_R2 = round(mean(criteria_weighted.KM_R2),5), sd_KM_R2 = round(sd(criteria_weighted.KM_R2),5),
            mean_Cox_R2 = round(mean(criteria_weighted.Cox_R2),5), sd_Cox_R2 = round(sd(criteria_weighted.Cox_R2),5),
            mean_RSF_R2 = round(mean(criteria_weighted.RSF_R2),5), sd_RSF_R2 = round(sd(criteria_weighted.RSF_R2),5),
            mean_KM_mse = round(mean(criteria_weighted.KM_mse),5), sd_KM_mse = round(sd(criteria_weighted.KM_mse),5),
            mean_Cox_mse = round(mean(criteria_weighted.Cox_mse),5), sd_Cox_mse = round(sd(criteria_weighted.Cox_mse),5),
            mean_RSF_mse = round(mean(criteria_weighted.RSF_mse),5), sd_RSF_mse = round(sd(criteria_weighted.RSF_mse),5))
#data.frame(res_santiane_log_summary)

write.csv(res_santiane_log, 
          file = "output_2017-10-24/res_santiane_log_5000.csv",
          row.names = F)

write.csv(res_santiane_log_summary,
          file = "output_2017-10-24/res_santiane_log_5000_summary.csv",
          row.names = F)



##### identite

t1 = Sys.time()
res_santiane_identite = make_result_real_data(y_var = "y", 
                                         delta_var = "delta",
                                         x_vars = var7,
                                         data = base_etude[,c("y","delta",var7)],
                                         n_train = 5000,#5000
                                         n_test = 5000,#5000
                                         max_value = 1465,
                                         phi = function(x){x},
                                         phi.args = list(),
                                         eval_methods = c("concordance","weighted", "group"),
                                         types_weights_eval = c("KM","Cox","RSF", "0_1"),
                                         max_ratio_weights_eval = 1000,
                                         v_bandwidth = c(20, 50),
                                         
                                         v_w_RF_mode1_type_weights = c("KM","Cox","RSF"),
                                         v_w_RF_mode2_type_weights = c("KM","Cox"),
                                         v_w_gam_type_weights = c("KM","Cox", "RSF"),
                                         
                                         v_w_RF_mode1_nodesize = c(100),
                                         v_w_RF_mode2_nodesize = c(100),
                                         v_RSF_reg_nodesize = c(100),
                                         
                                         v_w_RF_mode1_max_ratio_weights_model = c(10, 50),#, 50
                                         v_w_RF_mode2_max_ratio_weights_model = c(10, 50),#, 50
                                         v_w_gam_max_ratio_weights_model = c(10, 50),#, 50
                                         
                                         v_w_RF_mode1_maxdepth = 5,
                                         v_w_RF_mode2_maxdepth = 5,
                                         v_RSF_maxdepth = 5,
                                         
                                         ntree = 100,
                                         n_repet = 100,#50
                                         seed = 0)
Sys.time() - t1

#res_santiane_identite = read.csv(file = "output_2017-10-20/res_santiane_identite_5000.csv")

res_santiane_identite_summary = res_santiane_identite %>%
  group_by(type_pred, algo, type_weights, nodesize, maxdepth, max_ratio_weights_model) %>%
  summarise(mean_concordance = round(mean(concordance.concordant),5), sd_concordance = round(sd(concordance.concordant),5),
            mean_R2_20 = round(mean(criteria_group.R2_20),5), sd_R2_20 = round(sd(criteria_group.R2_20),5),
            mean_KM_R2 = round(mean(criteria_weighted.KM_R2),5), sd_KM_R2 = round(sd(criteria_weighted.KM_R2),5),
            mean_Cox_R2 = round(mean(criteria_weighted.Cox_R2),5), sd_Cox_R2 = round(sd(criteria_weighted.Cox_R2),5),
            mean_RSF_R2 = round(mean(criteria_weighted.RSF_R2),5), sd_RSF_R2 = round(sd(criteria_weighted.RSF_R2),5),
            mean_KM_mse = round(mean(criteria_weighted.KM_mse),5), sd_KM_mse = round(sd(criteria_weighted.KM_mse),5),
            mean_Cox_mse = round(mean(criteria_weighted.Cox_mse),5), sd_Cox_mse = round(sd(criteria_weighted.Cox_mse),5),
            mean_RSF_mse = round(mean(criteria_weighted.RSF_mse),5), sd_RSF_mse = round(sd(criteria_weighted.RSF_mse),5))
#data.frame(res_santiane_identite_summary)

write.csv(res_santiane_identite, 
          file = "output_2017-10-24/res_santiane_identite_5000.csv", 
          row.names = F)

write.csv(res_santiane_identite_summary,
          file = "output_2017-10-24/res_santiane_identite_5000_summary.csv",
          row.names = F)



##### indicatrice380

t1 = Sys.time()
res_santiane_indicatrice380 = make_result_real_data(y_var = "y", 
                                              delta_var = "delta",
                                              x_vars = var7,
                                              data = base_etude[,c("y","delta",var7)],
                                              n_train = 5000,#5000
                                              n_test = 5000,#5000
                                              max_value = 381,
                                              phi = function(x){(x > 380) * 1},
                                              phi.args = list(),
                                              eval_methods = c("concordance","weighted", "group"),
                                              types_weights_eval = c("KM","Cox","RSF", "0_1"),
                                              max_ratio_weights_eval = 1000,
                                              v_bandwidth = c(20, 50),
                                              
                                              v_w_RF_mode1_type_weights = c("KM","Cox","RSF"),
                                              v_w_RF_mode2_type_weights = c("KM","Cox"),
                                              v_w_gam_type_weights = c("KM","Cox", "RSF"),
                                              
                                              v_w_RF_mode1_nodesize = c(100),
                                              v_w_RF_mode2_nodesize = c(100),
                                              v_RSF_reg_nodesize = c(100),
                                              
                                              v_w_RF_mode1_max_ratio_weights_model = c(10, 50),#, 50
                                              v_w_RF_mode2_max_ratio_weights_model = c(10, 50),#, 50
                                              v_w_gam_max_ratio_weights_model = c(10, 50),#, 50
                                              
                                              v_w_RF_mode1_maxdepth = 5,
                                              v_w_RF_mode2_maxdepth = 5,
                                              v_RSF_maxdepth = 5,
                                              
                                              ntree = 100,
                                              n_repet = 100,#50
                                              seed = 0)
Sys.time() - t1


res_santiane_indicatrice380_summary = res_santiane_indicatrice380 %>%
  group_by(type_pred, algo, type_weights, nodesize, maxdepth, max_ratio_weights_model) %>%
  summarise(mean_concordance = round(mean(concordance.concordant),5), sd_concordance = round(sd(concordance.concordant),5),
            mean_R2_20 = round(mean(criteria_group.R2_20),5), sd_R2_20 = round(sd(criteria_group.R2_20),5),
            mean_KM_R2 = round(mean(criteria_weighted.KM_R2),5), sd_KM_R2 = round(sd(criteria_weighted.KM_R2),5),
            mean_Cox_R2 = round(mean(criteria_weighted.Cox_R2),5), sd_Cox_R2 = round(sd(criteria_weighted.Cox_R2),5),
            mean_RSF_R2 = round(mean(criteria_weighted.RSF_R2),5), sd_RSF_R2 = round(sd(criteria_weighted.RSF_R2),5),
            mean_KM_mse = round(mean(criteria_weighted.KM_mse),5), sd_KM_mse = round(sd(criteria_weighted.KM_mse),5),
            mean_Cox_mse = round(mean(criteria_weighted.Cox_mse),5), sd_Cox_mse = round(sd(criteria_weighted.Cox_mse),5),
            mean_RSF_mse = round(mean(criteria_weighted.RSF_mse),5), sd_RSF_mse = round(sd(criteria_weighted.RSF_mse),5))


write.csv(res_santiane_indicatrice380, 
          file = "output_2017-10-24/res_santiane_indicatrice380_5000.csv", 
          row.names = F)

write.csv(res_santiane_indicatrice380_summary,
          file = "output_2017-10-24/res_santiane_indicatrice380_5000_summary.csv",
          row.names = F)

